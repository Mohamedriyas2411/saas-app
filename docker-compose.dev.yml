# Development version with hot reloading
version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: saas-database-dev
    environment:
      POSTGRES_DB: saas_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./database/seed.sql:/docker-entrypoint-initdb.d/2-seed.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Development with hot reloading)
  backend:
    image: node:18-alpine
    container_name: saas-backend-dev
    working_dir: /app
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: saas_db
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: dev-secret-key
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "5000:5000"
    depends_on:
      database:
        condition: service_healthy
    command: sh -c "npm install && npm run dev"
    restart: unless-stopped

  # Frontend (Development with hot reloading)
  frontend:
    image: node:18-alpine
    container_name: saas-frontend-dev
    working_dir: /app
    environment:
      VITE_API_URL: http://localhost:5000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: sh -c "npm install && npm run dev -- --host"
    restart: unless-stopped

volumes:
  postgres_dev_data:

networks:
  default:
    name: saas-dev-network
